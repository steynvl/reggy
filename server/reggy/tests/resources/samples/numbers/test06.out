Java
Pattern regex = Pattern.compile("(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*");
(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*
Perl
my $regex = /(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*/;
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
POSIX
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
Python
regex = re.compile(r'(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*')
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
JavaScript
const regex = /(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*/;
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
PHP
$regex = '/(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*/';
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
Golang
regex, _ := regexp.Compile("(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*")
(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*
Rust
let re = Regex::new(r"(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*").unwrap();
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
C#
var re = new Regex(@"(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*");
(?:[$€¥£])? *[\+-]\+?[0-9]{1,3}(?:,[0-9]{3})*
Scala
val re = "(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*".r
(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*
Kotlin
val regex = Regex("(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*")
(?:[$€¥£])? *[\\+-]\\+?[0-9]{1,3}(?:,[0-9]{3})*