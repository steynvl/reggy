Java
Pattern regex = Pattern.compile("(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*");
(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*
Perl
my $regex = /(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*/;
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
POSIX
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
Python
regex = re.compile(r'(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*')
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
JavaScript
const regex = /(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*/;
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
PHP
$regex = '/(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*/';
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
Golang
regex, _ := regexp.Compile("(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*")
(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*
Rust
let re = Regex::new(r"(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*").unwrap();
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
C#
var re = new Regex(@"(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*");
(?:[$€¥£]|EUR) *[\+-]\+? *0*\d*
Scala
val re = "(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*".r
(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*
Kotlin
val regex = Regex("(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*")
(?:[$€¥£]|EUR) *[\\+-]\\+? *0*\\d*