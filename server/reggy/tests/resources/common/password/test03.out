Java
Pattern regex = Pattern.compile("[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}");
[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
Perl
my $regex = /[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}/;
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
POSIX
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
Python
regex = re.compile(r'[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&\'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}')
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&\'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
JavaScript
const regex = /[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}/;
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
PHP
$regex = '/[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}/';
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
Golang
regex, _ := regexp.Compile("[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}")
[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
Rust
let re = Regex::new(r"[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}").unwrap();
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
C#
var re = new Regex(@"[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}");
[A-Za-z0-9](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-)(?=.*\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
Scala
val re = "[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}".r
[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}
Kotlin
val regex = Regex("[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}")
[A-Za-z0-9](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-)(?=.*\\s)(?=.*[a-z])(?=.*_)(?=.*[A-Z]).{26,53}