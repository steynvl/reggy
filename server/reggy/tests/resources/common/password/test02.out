Java
Pattern regex = Pattern.compile("[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}");
[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}
Perl
my $regex = /[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}/;
[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
POSIX
[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
Python
regex = re.compile(r'[A-Za-z](?=.*\d)(?=.*[!"#$%&\'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}')
[A-Za-z](?=.*\d)(?=.*[!"#$%&\'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
JavaScript
const regex = /[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}/;
[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
PHP
$regex = '/[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}/';
[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
Golang
regex, _ := regexp.Compile("[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}")
[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}
Rust
let re = Regex::new(r"[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}").unwrap();
[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
C#
var re = new Regex(@"[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}");
[A-Za-z](?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@\[\]^_`{|}~])(?=.*-).{3,21}
Scala
val re = "[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}".r
[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}
Kotlin
val regex = Regex("[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}")
[A-Za-z](?=.*\\d)(?=.*[!\"#$%&'()*+,-.:;<=>?@\\[\\]^_`{|}~])(?=.*-).{3,21}